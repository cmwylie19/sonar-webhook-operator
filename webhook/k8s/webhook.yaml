# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   name: sonar-webhook-db-pvc
# spec:
#   # storageClassName: generic
#   accessModes:
#   - ReadWriteOnce
#   resources:
#     requests:
#       storage: 500Mi
# ---
# kind: PersistentVolume
# apiVersion: v1
# metadata:
#   name: sonar-webhook-db-pv
#   labels:
#     type: local
# spec:
#   # storageClassName: generic
#   claimRef:
#     namespace: default
#     name: sonar-webhook-db-pvc
#   capacity:
#     storage: 500Mi
#   accessModes:
#     - ReadWriteOnce
#   hostPath:
#     path: "/var/lib/mongo"
# ---
# apiVersion: apps/v1        
# kind: Deployment
# metadata:
#   labels:          
#     app: sonar-webhook-db
#   name: sonar-webhook-db 
# spec:         
#   replicas: 1    
#   selector: 
#     matchLabels:
#       app: sonar-webhook-db
#   template:
#     metadata:
#       labels:
#         app: sonar-webhook-db
#     spec:
#       containers:
#       - name: mongodb
#         volumeMounts:
#           - mountPath: /var/lib/mongo
#             name: mongo-sonar-webhook-db
#         image: mongo:4.2
#         ports:
#         - containerPort: 27017
#       volumes:
#       - name: mongo-sonar-webhook-db
#         persistentVolumeClaim:
#           claimName: sonar-webhook-db-pvc
#       restartPolicy: Always
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   labels:
#     app: sonar-webhook-db
#   name: sonar-webhook-db
# spec:
#   ports:
#     - port: 27017
#       targetPort: 27017
#   selector:
#     app: sonar-webhook-db
# ---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: sonar-webhook
  name: sonar-webhook
  namespace: default
spec:
  ports:
    - port: 8080
      name: http
      protocol: TCP
      targetPort: 8080
  selector:
    app: sonar-webhook
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: sonar-webhook
    version: v1
  name: sonar-webhook
  namespace: default
spec:
  selector:
    matchLabels:
      app: sonar-webhook
      version: v1
  replicas: 1
  template:
    metadata:
      labels:
        app: sonar-webhook
        version: v1
    spec:
      serviceAccountName: sonar-webhook
      containers:
        - image: docker.io/cmwylie19/sonar-webhook:latest
          name: sonar-webhook
          env:
            - name: SIGNING_KEY
              value: SECRET
            - name: MONGO_URL
              value: mongodb://sonar-webhook-db:27017
          ports:
            - containerPort: 8080
              name: http
      restartPolicy: Always
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: sonar-webhook